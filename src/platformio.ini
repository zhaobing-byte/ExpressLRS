; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env]
#upload_port =
#upload_speed =
framework = arduino
extra_scripts =
	pre:python/build_flags.py
	python/build_env_setup.py
monitor_speed = 420000
monitor_dtr = 0
monitor_rts = 0

# ------------------------- COMMON ENV DEFINITIONS -----------------
[common_env_data]
src_filter = +<*> -<.git/> -<svn/> -<example/> -<examples/> -<test/> -<tests/> -<*.py> -<*test*.*>
build_flags = -Wall
build_flags_tx = -DTARGET_TX=1 ${common_env_data.build_flags}
build_flags_rx = -DTARGET_RX=1 ${common_env_data.build_flags}

[env_common_esp32]
platform = espressif32@1.12.0
board = esp32dev
upload_speed = 921600
upload_resetmethod = nodemcu
monitor_speed = 460800
build_flags =
	-D PLATFORM_ESP32=1
	-D CONFIG_TCPIP_LWIP=1
src_filter = ${common_env_data.src_filter} -<ESP8266*.*> -<STM32*.*>
lib_deps = NeoPixelBus

[env_common_esp82xx]
platform = espressif8266@2.2.3
platform_packages = toolchain-xtensa@2.40802.200502
board = esp8285
upload_speed = 921600
build_flags =
	-D PLATFORM_ESP8266=1
	-D VTABLES_IN_FLASH=1
	-O2
board_build.f_cpu = 80000000L
src_filter = ${common_env_data.src_filter} -<ESP32*.*> -<STM32*.*> -<WS281B*.*>

[env_common_stm32]
platform = ststm32@8.0.0
board = bluepill_f103c8
build_unflags = -Os
build_flags =
	-D PLATFORM_STM32=1
	-O2
src_filter = ${common_env_data.src_filter} -<ESP32*.*> -<ESP8266*.*> -<WS281B*.*>
lib_deps =
    https://github.com/PaoloP74/extEEPROM.git

# ------------------------- TARGET ENV DEFINITIONS -----------------

[env:Frsky_TX_R9M_via_STLINK_OLD_BOOTLOADER_DEPRECATED]
extends = env_common_stm32
build_flags =
	${env_common_stm32.build_flags}
	${common_env_data.build_flags_tx}
	-D TARGET_R9M_TX
	-D TARGET_USE_EEPROM=1
	-D TARGET_EEPROM_ADDR=0x51
	-D HSE_VALUE=12000000U
	-DVECT_TAB_OFFSET=0x2000U
board_build.ldscript = variants/R9M_ldscript_old_bl.ld
board_build.flash_offset = 0x2000
src_filter = ${env_common_stm32.src_filter} -<rx_*.cpp>
lib_deps =
	https://github.com/PaoloP74/extEEPROM.git

## TODO: R9M STLINK/stock and R9M Lite targets can be merged
[env:Frsky_TX_R9M_via_STLINK]
extends = env_common_stm32
build_flags =
	${env_common_stm32.build_flags}
	${common_env_data.build_flags_tx}
	-D TARGET_R9M_TX
	-D TARGET_USE_EEPROM=1
	-D TARGET_EEPROM_ADDR=0x51
	-D HSE_VALUE=12000000U
	-DVECT_TAB_OFFSET=0x4000U
board_build.ldscript = variants/R9M_ldscript.ld
board_build.flash_offset = 0x4000
src_filter = ${env_common_stm32.src_filter} -<rx_*.cpp>
upload_flags =
	BOOTLOADER=bootloader/r9m_bootloader.bin
	VECT_OFFSET=0x4000
lib_deps =
	https://github.com/PaoloP74/extEEPROM.git

[env:Frsky_TX_R9M_via_stock_BL]
extends = env:Frsky_TX_R9M_via_STLINK

[env:Frsky_TX_R9M_via_WIFI]
extends = env_common_stm32
board = bluepill_f103c8
build_unflags = -Os
build_flags =
	${env_common_stm32.build_flags}
	${common_env_data.build_flags_tx}
	-D TARGET_R9M_TX
	-D TARGET_USE_EEPROM=1
	-D TARGET_EEPROM_ADDR=0x51
	-D HSE_VALUE=12000000U
	-O2
src_filter = ${env:Frsky_TX_R9M_via_STLINK.src_filter}
lib_deps = ${env:Frsky_TX_R9M_via_STLINK.lib_deps}

[env:Frsky_TX_R9M_LITE_via_STLINK]
extends = env:Frsky_TX_R9M_via_STLINK
build_flags =
	${env_common_stm32.build_flags}
	${common_env_data.build_flags_tx}
	-D TARGET_R9M_LITE_TX
	-D TARGET_USE_EEPROM=1
	-D TARGET_EEPROM_ADDR=0x51
	-D HSE_VALUE=12000000U
	-DVECT_TAB_OFFSET=0x4000U

[env:Frsky_TX_R9M_LITE_via_stock_BL]
extends = env:Frsky_TX_R9M_LITE_via_STLINK

[env:Frsky_TX_R9M_LITE_PRO_via_STLINK]
extends = env_common_stm32
platform = ststm32@9.0.0
board = robotdyn_blackpill_f303cc
build_flags =
	${env_common_stm32.build_flags}
	${common_env_data.build_flags_tx}
	-D TARGET_R9M_LITE_PRO_TX
	-D TARGET_USE_EEPROM=1
	-D TARGET_EEPROM_ADDR=0x51
	-D HSE_VALUE=12000000U
	-O2
	-DVECT_TAB_OFFSET=0x8000U
board_build.ldscript = variants/R9M_Lite_Pro_ldscript.ld
board_build.flash_offset = 0x8000
upload_flags =
	BOOTLOADER=bootloader/r9m_lite_pro_bootloader.bin
	VECT_OFFSET=0x8000
src_filter = ${env_common_stm32.src_filter} -<rx_*.cpp>
lib_deps =
	https://github.com/PaoloP74/extEEPROM.git

[env:Frsky_RX_R9SLIM_via_STLINK]
extends = env:Frsky_RX_R9SLIM_via_BetaflightPassthrough
upload_flags =
    BOOTLOADER=bootloader/r9slim_no_btn_bootloader.bin
    VECT_OFFSET=0x8000

[env:Frsky_RX_R9SLIM_via_BetaflightPassthrough]
extends = env_common_stm32
build_flags =
	${env_common_stm32.build_flags}
	${common_env_data.build_flags_rx}
	-D TARGET_R9M_RX
	-D TARGET_R9SLIM_RX
	-D TARGET_100mW_MODULE
	-D HSE_VALUE=12000000U
	-DVECT_TAB_OFFSET=0x08008000U
board_build.ldscript = variants/R9MM/R9MM_ldscript.ld
src_filter = ${common_env_data.src_filter} -<ESP32*.*> -<ESP8266*.*> -<WS281B*.*> -<tx_*.cpp>
lib_deps =
	https://github.com/PaoloP74/extEEPROM.git
	Wire
	
[env:Frsky_RX_R9MM_R9MINI_via_STLINK]
extends = env_common_stm32
board = R9MM
build_flags =
	${env_common_stm32.build_flags}
	${common_env_data.build_flags_rx}
	-D TARGET_R9M_RX
	-D TARGET_100mW_MODULE
	-D TARGET_USE_EEPROM=1
	-D TARGET_EEPROM_ADDR=0x50
	-D HSE_VALUE=24000000U
	-DVECT_TAB_OFFSET=0x08008000U
src_filter = ${env_common_stm32.src_filter} -<tx_*.cpp>
upload_flags =
    BOOTLOADER=bootloader/r9mm_bootloader.bin
    VECT_OFFSET=0x8000

[env:Frsky_RX_R9MM_R9MINI_via_BetaflightPassthrough]
extends = env:Frsky_RX_R9MM_R9MINI_via_STLINK

[env:Frsky_RX_R9SLIMPLUS_via_STLINK]
extends = env:Frsky_RX_R9SLIMPLUS_via_BetaflightPassthrough
upload_flags =
    BOOTLOADER=bootloader/r9slim_plus_bootloader.bin
    VECT_OFFSET=0x8000

[env:Frsky_RX_R9SLIMPLUS_via_BetaflightPassthrough]
extends = env_common_stm32
board_build.ldscript = variants/R9MM/R9MM_ldscript.ld
build_flags =
	${env_common_stm32.build_flags}
	${common_env_data.build_flags_rx}
	-D TARGET_R9M_RX
	-D TARGET_R9SLIMPLUS_RX
	-D TARGET_100mW_MODULE
	-D TARGET_USE_EEPROM=1
	-D TARGET_EEPROM_ADDR=0x50
	-D HSE_VALUE=12000000U
	-DVECT_TAB_OFFSET=0x8000U
src_filter = ${env_common_stm32.src_filter} -<tx_*.cpp>

[env:Frsky_RX_R9SLIMPLUS_OTA_via_STLINK]
extends = env:Frsky_RX_R9SLIMPLUS_via_BetaflightPassthrough
board = robotdyn_blackpill_f303cc
upload_flags =
    BOOTLOADER=bootloader/r9slim_plus_ota_bootloader.bin
    VECT_OFFSET=0x8000

[env:Frsky_RX_R9SLIMPLUS_OTA_via_BetaflightPassthrough]
extends = env:Frsky_RX_R9SLIMPLUS_OTA_via_STLINK

[env:Frsky_RX_R9MX_via_STLINK]
extends = env_common_stm32
board = r9mx
build_flags =
	${env_common_stm32.build_flags}
	${common_env_data.build_flags_rx}
	-D TARGET_R9M_RX
	-D TARGET_R9MX_RX
	-D TARGET_100mW_MODULE
	-D TARGET_USE_EEPROM=1
	-D TARGET_EEPROM_ADDR=0x50
	-DVECT_TAB_OFFSET=0x08008000U
	-D HSI_VALUE=16000000
	-Wl,--defsym=FLASH_OFFSET=0x8000
src_filter = ${env_common_stm32.src_filter} -<tx_*.cpp>
upload_flags =
	BOOTLOADER=bootloader/r9mx_bootloader.bin
	VECT_OFFSET=0x8000

[env:Frsky_RX_R9MX_via_BetaflightPassthrough]
extends = env:Frsky_RX_R9MX_via_STLINK

[env:Jumper_RX_R900MINI_via_STLINK]
extends = env:Jumper_RX_R900MINI_via_BetaflightPassthrough
upload_flags =
    BOOTLOADER=bootloader/jumper_r900_bootloader.bin
    VECT_OFFSET=0x8000

[env:Jumper_RX_R900MINI_via_BetaflightPassthrough]
extends = env_common_stm32
build_flags =
	${env_common_stm32.build_flags}
	${common_env_data.build_flags_rx}
	-D TARGET_R9M_RX
	-D TARGET_R900MINI_RX
	-D TARGET_100mW_MODULE
	-D TARGET_USE_EEPROM=1
	-D TARGET_EEPROM_ADDR=0x50
	-D HSE_VALUE=12000000U
	-DVECT_TAB_OFFSET=0x8000U
board_build.ldscript = variants/R9MM/R9MM_ldscript.ld
src_filter = ${env_common_stm32.src_filter} -<tx_*.cpp>

[env:HappyModel_TX_ES915TX_via_STLINK]
extends = env_common_stm32
build_flags =
	${env_common_stm32.build_flags}
	${common_env_data.build_flags_tx}
	-D TARGET_TX_ES915TX
	-D TARGET_USE_EEPROM=1
	-D TARGET_EEPROM_ADDR=0x51
	-D HSE_VALUE=12000000U
	-DVECT_TAB_OFFSET=0x4000U
board_build.ldscript = variants/R9M_ldscript.ld
board_build.flash_offset = 0x4000
src_filter = ${env_common_stm32.src_filter} -<rx_*.cpp>
upload_flags =
	BOOTLOADER=bootloader/r9m_bootloader.bin
	VECT_OFFSET=0x4000

[env:HappyModel_TX_ES915TX_via_stock_BL]
extends = env:HappyModel_TX_ES915TX_via_STLINK

[env:HappyModel_RX_ES915RX_via_STLINK]
extends = env:Frsky_RX_R9MM_R9MINI_via_STLINK

[env:HappyModel_RX_ES915RX_via_BetaflightPassthrough]
extends = env:Frsky_RX_R9MM_R9MINI_via_STLINK

[env:BETAFPV_2400_TX_via_UART]
extends = env_common_esp32
board_build.f_cpu = 160000000L
build_flags =
	${env_common_esp32.build_flags}
	${common_env_data.build_flags_tx}
	-D TARGET_TX_BETAFPV_V1
	-D TARGET_SX1280
	-D VTABLES_IN_FLASH=1
	-O2
src_filter = ${env_common_esp32.src_filter} -<rx_*.cpp>

[env:BETAFPV_2400_RX_via_UART]
extends = env_common_esp82xx
build_flags =
	${env_common_esp82xx.build_flags}
	${common_env_data.build_flags_rx}
	-D TARGET_RX_BETAFPV_V1
	-D TARGET_100mW_MODULE
	-D TARGET_SX1280
src_filter = ${env_common_esp82xx.src_filter} -<tx_*.cpp>

[env:DIY_900_TX_TTGO_V1_SX127x_via_UART]
extends = env_common_esp32
build_flags =
	${env_common_esp32.build_flags}
	${common_env_data.build_flags_tx}
	-D TARGET_TTGO_LORA_V1_AS_TX
	-D TARGET_100mW_MODULE
src_filter = ${env_common_esp32.src_filter} -<rx_*.cpp>

[env:DIY_900_TX_TTGO_V2_SX127x_via_UART]
extends = env_common_esp32
build_flags =
	${env_common_esp32.build_flags}
	${common_env_data.build_flags_tx}
	-D TARGET_TTGO_LORA_V2_AS_TX
	-D TARGET_100mW_MODULE
src_filter = ${env_common_esp32.src_filter} -<rx_*.cpp>

[env:DIY_900_TX_ESP32_SX127x_E19_via_UART]
extends = env_common_esp32
build_flags =
	${env_common_esp32.build_flags}
	${common_env_data.build_flags_tx}
	-D TARGET_EXPRESSLRS_PCB_TX_V3
	-D TARGET_1000mW_MODULE
src_filter = ${env_common_esp32.src_filter} -<rx_*.cpp>

[env:DIY_900_TX_ESP32_SX127x_RFM95_via_UART]
extends = env_common_esp32
build_flags =
	${env_common_esp32.build_flags}
	${common_env_data.build_flags_tx}
	-D TARGET_EXPRESSLRS_PCB_TX_V3
	-D TARGET_100mW_MODULE
src_filter = ${env_common_esp32.src_filter} -<rx_*.cpp>


[env:DIY_900_RX_ESP8285_SX127x_via_UART]
extends = env_common_esp82xx
build_flags =
	${env_common_esp82xx.build_flags}
	${common_env_data.build_flags_rx}
	-D TARGET_EXPRESSLRS_PCB_RX_V3
	-D TARGET_100mW_MODULE
src_filter = ${env_common_esp82xx.src_filter} -<tx_*.cpp>

[env:DIY_900_RX_ESP8285_SX127x_via_BetaflightPassthrough]
extends = env:DIY_900_RX_ESP8285_SX127x_via_UART
upload_speed = 115200
upload_protocol = custom
upload_command =
	python $PROJECT_DIR/python/BFinitPassthrough.py $UPLOAD_SPEED
	python $PROJECT_DIR/python/esptool-3.0/esptool.py --no-stub -b $UPLOAD_SPEED -c esp8266 --before no_reset --after soft_reset write_flash 0x0000 $SOURCE

[env:DIY_2400_TX_ESP32_SX1280_Mini_via_UART]
extends = env_common_esp32
board_build.f_cpu = 160000000L
build_flags =
	${env_common_esp32.build_flags}
	${common_env_data.build_flags_tx}
	-D TARGET_TX_ESP32_SX1280_V1
	-D TARGET_SX1280
	-D VTABLES_IN_FLASH=1
	-O2
src_filter = ${env_common_esp32.src_filter} -<rx_*.cpp>

[env:DIY_2400_TX_ESP32_SX1280_E28_via_UART]
extends = env_common_esp32
board_build.f_cpu = 160000000L
build_flags =
	${env_common_esp32.build_flags}
	${common_env_data.build_flags_tx}
	-D TARGET_TX_ESP32_E28_SX1280_V1
	-D TARGET_SX1280
	-D VTABLES_IN_FLASH=1
	-O2
src_filter = ${env_common_esp32.src_filter} -<rx_*.cpp>

[env:DIY_2400_TX_ESP32_SX1280_LORA1280F27_via_UART]
extends = env_common_esp32
board_build.f_cpu = 160000000L
build_flags =
	${env_common_esp32.build_flags}
	${common_env_data.build_flags_tx}
	-D TARGET_TX_ESP32_LORA1280F27
	-D TARGET_SX1280
	-D VTABLES_IN_FLASH=1
	-O2
src_filter = ${env_common_esp32.src_filter} -<rx_*.cpp>

[env:GHOST_2400_TX_via_STLINK]
extends = env_common_stm32
platform = ststm32@11.0.0
board = GHOST_TX
build_flags =
	${env_common_stm32.build_flags}
	${common_env_data.build_flags_tx}
 	-D TARGET_TX_GHOST
	-D DEBUG=1
 	-D HSE_VALUE=32000000U
	-O2
	-DVECT_TAB_OFFSET=0x08004000U
	-Wl,--defsym=FLASH_APP_OFFSET=0x4000
src_filter = ${env_common_stm32.src_filter} -<rx_*.cpp>
upload_flags =
	BOOTLOADER=bootloader/ghost/ghost_tx_bootloader.bin
	VECT_OFFSET=0x4000

[env:GHOST_ATTO_2400_RX_via_STLINK]
extends = env_common_stm32
platform = ststm32@11.0.0
board = GHOST_ATTO
build_flags =
	${env_common_stm32.build_flags}
	${common_env_data.build_flags_rx}
 	-D TARGET_RX_GHOST_ATTO_V1
 	-D TARGET_100mW_MODULE
 	-D HSE_VALUE=32000000U
	-DVECT_TAB_OFFSET=0x08004000U
	-Wl,--defsym=FLASH_APP_OFFSET=0x4000
src_filter = ${env_common_stm32.src_filter} -<tx_*.cpp>
lib_deps =
upload_flags =
	BOOTLOADER=bootloader/ghost/ghost_atto_v1.2_bootloader.bin
	VECT_OFFSET=0x4000

[env:GHOST_ATTO_2400_RX_via_BetaflightPassthrough]
extends = env:GHOST_ATTO_2400_RX_via_STLINK

[env:DIY_2400_RX_ESP8285_SX1280_via_UART]
extends = env_common_esp82xx
build_flags =
	${env_common_esp82xx.build_flags}
	${common_env_data.build_flags_rx}
	-D TARGET_RX_ESP8266_SX1280_V1
	-D TARGET_100mW_MODULE
	-D TARGET_SX1280
src_filter = ${env_common_esp82xx.src_filter} -<tx_*.cpp>

[env:DIY_2400_RX_ESP8285_SX1280_via_BetaflightPassthrough]
extends = env:DIY_2400_RX_ESP8285_SX1280_via_UART
upload_speed = 115200
upload_protocol = custom
upload_command =
	python $PROJECT_DIR/python/BFinitPassthrough.py $UPLOAD_SPEED
	python $PROJECT_DIR/python/esptool-3.0/esptool.py --no-stub -b $UPLOAD_SPEED -c esp8266 --before no_reset --after soft_reset write_flash 0x0000 $SOURCE

[env:DIY_2400_RX_STM32_CCG_Nano_v0_5_via_STLINK]
extends = env_common_stm32
platform = ststm32@9.0.0
board = l432kb
# max size = 131072 - 0x4000 = 114688
board_upload.maximum_size = 114688
build_flags =
	${env_common_stm32.build_flags}
	${common_env_data.build_flags_rx}
	-D HAL_RTC_MODULE_DISABLED=1
	-D HAL_ADC_MODULE_DISABLED=1
	-D DISABLE_GENERIC_SERIALUSB=1
	-D TARGET_SX1280_RX_CCG_NANO_v05=1
	-D TARGET_100mW_MODULE=1
	-D TARGET_SX1280=1
	-D HSI_VALUE=16000000U
	-D USE_HSI=1
	-O3
	-D VECT_TAB_OFFSET=0x4000U
    -D FLASH_APP_OFFSET=0x4000U
    -Wl,--defsym=FLASH_APP_OFFSET=16K
src_filter = ${env_common_stm32.src_filter} -<tx_*.cpp>
upload_flags =
    BOOTLOADER=bootloader/bootloader_sx1280_rx_ccg_nano_v05.bin
    VECT_OFFSET=0x4000
lib_deps =
lib_ignore = SX127xDriver

[env:DIY_2400_RX_STM32_CCG_Nano_v0_5_via_BetaflightPassthrough]
extends = env:DIY_2400_RX_STM32_CCG_Nano_v0_5_via_STLINK

[env:native]
platform = native
framework =
test_ignore = test_embedded
lib_ignore = BUTTON, CRSF, DAC, EEPROM, FIFO, LQCALC, MSP, OTA, POWERMGNT, SX127xDriver, SX1280Driver
src_filter = ${common_env_data.src_filter} +<test_main.cpp> -<ESP32*.*> -<STM32*.*> -<ESP8*.*> -<tx_*.cpp> -<rx_*.cpp> -<FHSS.*> -<common.*> -<FastSync.*> -<utils.*> -<config.*>
build_flags =
	-D ENABLE_TELEMETRY
